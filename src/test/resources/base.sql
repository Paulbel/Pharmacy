-- MySQL Script generated by MySQL Workbench
-- Sun Feb  4 20:32:06 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema test
-- -----------------------------------------------------
-- Система online-аптека. Клиенты выбирают препарат из списка доступных и заказывают определенное количество. Есть препараты, требующие рецепта врача. Врач может назначить клиенту рецепт. Администратор может банить пользоваетелей.

-- -----------------------------------------------------
-- Schema test
--
-- Система online-аптека. Клиенты выбирают препарат из списка доступных и заказывают определенное количество. Есть препараты, требующие рецепта врача. Врач может назначить клиенту рецепт. Администратор может банить пользоваетелей.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test`
  DEFAULT CHARACTER SET utf8;
USE `test`;

-- -----------------------------------------------------
-- Table `test`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`user` (
  `login`    VARCHAR(20)                                      NOT NULL
  COMMENT 'Логин пользователя',
  `name`     VARCHAR(20)                                      NOT NULL
  COMMENT 'Имя пользователя',
  `surname`  VARCHAR(25)                                      NOT NULL
  COMMENT 'Фамилия пользователя',
  `password` VARCHAR(64)                                      NOT NULL
  COMMENT 'Пароль пользователя',
  `role`     ENUM ('doctor', 'admin', 'pharmacist', 'client') NOT NULL DEFAULT 'client'
  COMMENT 'Роль пользователя в рамках системы, поумолчанию \'client\', так как любой пользователь, только прошедший регистрацию является клиентом',
  `email`    VARCHAR(25)                                      NULL,
  `phone`    VARCHAR(20)                                      NULL,
  PRIMARY KEY (`login`),
  INDEX `login_idx` (`login` ASC)
    COMMENT 'Индексация поля, хранящего логин, нужна так как это в наиболее часто используемых запросах используется данное поле '
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая информацию о пользователях';

-- -----------------------------------------------------
-- Table `test`.`manufacturer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`manufacturer` (
  `id`           MEDIUMINT   NOT NULL AUTO_INCREMENT
  COMMENT 'Идентификацииный номер производителя',
  `country_code` VARCHAR(3)  NOT NULL,
  `phone_number` VARCHAR(70) NULL,
  `email`        VARCHAR(50) NULL
  COMMENT 'Адрес электронной почты производителя',
  PRIMARY KEY (`id`)
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая производителей препаратов';

-- -----------------------------------------------------
-- Table `test`.`drug`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`drug` (
  `id`                MEDIUMINT     NOT NULL AUTO_INCREMENT
  COMMENT 'Идентификационный номер препарата',
  `manufacturer_id`   MEDIUMINT     NULL
  COMMENT 'Идентификационный номер производителя данного препарата',
  `dosage`            MEDIUMINT     NOT NULL
  COMMENT 'Дозировка препарата',
  `amount`            MEDIUMINT     NOT NULL
  COMMENT 'Количество препарата в упаковке(шт)',
  `number`            MEDIUMINT     NOT NULL DEFAULT 0
  COMMENT 'Количество упаковок перапарата на складе(шт)',
  `price`             DECIMAL(6, 2) NOT NULL
  COMMENT 'Цена препарата',
  `need_prescription` TINYINT(1)    NOT NULL DEFAULT 0
  COMMENT 'Нужен ли рецепт для заказа',
  PRIMARY KEY (`id`),
  INDEX `fk_manufacturer_id_idx` (`manufacturer_id` ASC),
  CONSTRAINT `fk_manufacturer_id`
  FOREIGN KEY (`manufacturer_id`)
  REFERENCES `test`.`manufacturer` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая характеристики препаратов';

-- -----------------------------------------------------
-- Table `test`.`language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`language` (
  `language_name` VARCHAR(15) NOT NULL
  COMMENT 'Код языка',
  PRIMARY KEY (`language_name`)
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая языки локализации';

-- -----------------------------------------------------
-- Table `test`.`drug_translate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`drug_translate` (
  `drug_id`     MEDIUMINT    NOT NULL
  COMMENT 'Идентификационный номер препарата',
  `lang_name`   VARCHAR(15)  NOT NULL
  COMMENT 'Код языка локализации',
  `name`        VARCHAR(70)  NOT NULL
  COMMENT 'Наименование препарата',
  `description` VARCHAR(200) NULL
  COMMENT 'Описание препарата',
  `composition` VARCHAR(100) NULL
  COMMENT 'Состав препарата',
  INDEX `drug_id_idx` (`drug_id` ASC),
  INDEX `lang_code_idx` (`lang_name` ASC),
  INDEX `name_idx` (`name` ASC)
    COMMENT 'Постоянно используется поиск по наименованию, сортировка по наименованию ',
  CONSTRAINT `fk_drug_translate_drug_id_drug_id`
  FOREIGN KEY (`drug_id`)
  REFERENCES `test`.`drug` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_drug_translate_lang_name_language_code`
  FOREIGN KEY (`lang_name`)
  REFERENCES `test`.`language` (`language_name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая локализованную информацию о препаратах';

-- -----------------------------------------------------
-- Table `test`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`orders` (
  `id`           BIGINT      NOT NULL AUTO_INCREMENT
  COMMENT 'Идентификационный номер заказа',
  `client_login` VARCHAR(20) NOT NULL
  COMMENT 'Идентификационный номер пользователя',
  `drug_id`      MEDIUMINT   NOT NULL
  COMMENT 'Идентификационный номер препарата',
  `number`       SMALLINT    NOT NULL
  COMMENT 'Количество упаковок препарата, заказанного пользоваетелем',
  `date`         DATETIME    NULL,
  INDEX `drug_id_idx` (`drug_id` ASC),
  PRIMARY KEY (`id`),
  INDEX `b_idx` (`client_login` ASC),
  CONSTRAINT `a`
  FOREIGN KEY (`drug_id`)
  REFERENCES `test`.`drug` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `b`
  FOREIGN KEY (`client_login`)
  REFERENCES `test`.`user` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая заказы клиентов';

-- -----------------------------------------------------
-- Table `test`.`manufacturer_translate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`manufacturer_translate` (
  `language_name`   VARCHAR(15)  NOT NULL
  COMMENT 'Код языка',
  `manufacturer_id` MEDIUMINT    NOT NULL
  COMMENT 'Идентификациионный номер предприятия',
  `name`            VARCHAR(70)  NOT NULL
  COMMENT 'Название предприятия',
  `address`         VARCHAR(100) NULL
  COMMENT 'Адрес производителя',
  INDEX `language_code_idx` (`language_name` ASC),
  INDEX `manufacturer_id_idx` (`manufacturer_id` ASC),
  CONSTRAINT `fk_manufacturer_id_1`
  FOREIGN KEY (`manufacturer_id`)
  REFERENCES `test`.`manufacturer` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_language_code_1`
  FOREIGN KEY (`language_name`)
  REFERENCES `test`.`language` (`language_name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая локализованные данные о предприятиях';

-- -----------------------------------------------------
-- Table `test`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`country` (
  `code` VARCHAR(2) NOT NULL
  COMMENT 'Международный код страны(2 буквы)',
  PRIMARY KEY (`code`)
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая страны';

-- -----------------------------------------------------
-- Table `test`.`country_translate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`country_translate` (
  `country_code` VARCHAR(2)  NOT NULL
  COMMENT 'Идентификационный номер страны',
  `lan_name`     VARCHAR(15) NOT NULL
  COMMENT 'Код языка',
  `name`         VARCHAR(40) NOT NULL
  COMMENT 'Название страны',
  INDEX `fk_country_code_idx` (`country_code` ASC),
  INDEX `fk_language_code_idx` (`lan_name` ASC),
  CONSTRAINT `fk_language_code_2`
  FOREIGN KEY (`lan_name`)
  REFERENCES `test`.`language` (`language_name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_country_code_2`
  FOREIGN KEY (`country_code`)
  REFERENCES `test`.`country` (`code`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
  ENGINE = InnoDB
  COMMENT = 'Таблица, хранящая локализованные названия стран';

-- -----------------------------------------------------
-- Table `test`.`language_translate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`language_translate` (
  `language_to_translate` VARCHAR(15) NOT NULL,
  `language_name`         VARCHAR(15) NOT NULL,
  `name`                  VARCHAR(45) NOT NULL,
  INDEX `fk_language_name_a_idx` (`language_name` ASC),
  CONSTRAINT `fk_language_name`
  FOREIGN KEY (`language_to_translate`)
  REFERENCES `test`.`language` (`language_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_language_name_a`
  FOREIGN KEY (`language_name`)
  REFERENCES `test`.`language` (`language_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `test`.`prescription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`prescription` (
  `id`         MEDIUMINT   NOT NULL AUTO_INCREMENT,
  `client`     VARCHAR(20) NOT NULL,
  `doctor`     VARCHAR(20) NOT NULL,
  `drug`       MEDIUMINT   NOT NULL,
  `start_date` DATETIME    NOT NULL,
  `end_date`   DATETIME    NOT NULL,
  `number`     MEDIUMINT   NOT NULL,
  INDEX `fk_client_login_idx` (`client` ASC),
  INDEX `fk_doctor_login_idx` (`doctor` ASC),
  INDEX `fk_dugid_idx` (`drug` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_client_login`
  FOREIGN KEY (`client`)
  REFERENCES `test`.`user` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_login`
  FOREIGN KEY (`doctor`)
  REFERENCES `test`.`user` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_drugid`
  FOREIGN KEY (`drug`)
  REFERENCES `test`.`drug` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `test`.`prolongation_request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test`.`prolongation_request` (
  `id`              BIGINT                                       NOT NULL AUTO_INCREMENT,
  `prescription_id` MEDIUMINT                                    NOT NULL,
  `day_count`       MEDIUMINT                                    NOT NULL,
  `status`          ENUM ('accepted', 'refused', 'unconsidered') NOT NULL DEFAULT 'unconsidered',
  PRIMARY KEY (`id`),
  INDEX `fk_prolongation_request_prescription_id_prescription_id_idx` (`prescription_id` ASC),
  CONSTRAINT `fk_prolongation_request_prescription_id_prescription_id`
  FOREIGN KEY (`prescription_id`)
  REFERENCES `test`.`prescription` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;


INSERT INTO country (code) VALUES
  ('ru'),
  ('by'),
  ('de'),
  ('en'),
  ('ua'),
  ('fr'),
  ('lt'),
  ('lv'),
  ('cn'),
  ('es'),
  ('us'),
  ('nl'),
  ('md'),
  ('jp'),
  ('bg'),
  ('cz'),
  ('si'),
  ('in'),
  ('is'),
  ('it'),
  ('at'),
  ('rs'),
  ('gb'),
  ('eg'),
  ('ch'),
  ('ps'),
  ('hr'),
  ('ca'),
  ('cy'),
  ('tr'),
  ('pl');

INSERT INTO language (language_name) VALUES
  ('be'),
  ('ru'),
  ('cz'),
  ('en'),
  ('fr'),
  ('de'),
  ('uk');


INSERT INTO language_translate (language_to_translate, language_name, name) VALUES
  ('be', 'ru', 'белорусский'),
  ('ru', 'ru', 'русский'),
  ('cz', 'ru', 'чешский'),
  ('en', 'ru', 'английский'),
  ('fr', 'ru', 'французский'),
  ('de', 'ru', 'немецкий'),
  ('uk', 'ru', 'украинский'),
  ('ru', 'en', 'russian'),
  ('be', 'en', 'belarusian');

INSERT INTO country_translate (country_code, lan_name, name) VALUES
  ('ru', 'ru', 'Российская Федерация'),
  ('ru', 'en', 'Russian Federation'),
  ('by', 'ru', 'Республика Беларусь'),
  ('by', 'en', 'Republic of Belarus'),
  ('de', 'ru', 'Федеративная Республика Германия'),
  ('de', 'en', 'Federal Republic of Germany'),
  ('en', 'ru', 'Англия'),
  ('en', 'en', 'England'),
  ('ua', 'ru', 'Украина'),
  ('ua', 'en', 'Ukraine'),
  ('lt', 'ru', 'Литовская Республика'),
  ('lt', 'en', 'Lithuania'),
  ('cn', 'ru', 'Китайская Народная Республика'),
  ('cn', 'en', 'Peoples Republic of China'),
  ('es', 'ru', 'Королевство Испания'),
  ('es', 'en', 'Kingdom of Spain'),
  ('us', 'ru', 'Соединённые Штаты Америки'),
  ('us', 'en', 'United States of America');
